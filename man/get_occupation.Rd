% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_occupation.R
\name{get_occupation}
\alias{get_occupation}
\title{Legislators occupations data.}
\format{Data frame in wide format with columns (might vary by legislature):
\itemize{
\item{pageid: Wikipedia page ID identifying a legislator's Wikipedia biography (of class \sQuote{integer}).}
\item{occupation_1: occupation a legislator practiced or was trained in (of class \sQuote{logical}).}
\item{occupation_2: ... (of class \sQuote{logical}).}
\item{...}
}}
\source{
Wikipedia API, \url{https://de.wikipedia.org/w/api.php}
}
\usage{
get_occupation(legislature)
}
\arguments{
\item{legislature}{A character string specifying the legislature for which data shall be fetched from the GitHub repository. Currently one of \sQuote{austria}, \sQuote{france}, \sQuote{germany}, \sQuote{ireland}, \sQuote{ushouse}, or \sQuote{ussenate}.}
}
\value{
A data frame with columns as specified above.
}
\description{
Fetches occupational data of legislators' for the specified legislature from the GitHub repository. Requires a working Internet connection.
}
\examples{
\dontrun{
## load data into memory
at <- austria

## load only data for members of the 12th legislative period into memory
at_12 <- austria[austria$session == 12,]

## load only birth dates for members of the political party 'SdP' into memory
at_sdp_birth <- austria[austria$party == "SdP", "birthdate"]

## add traffic data to at_12 (requires package 'dplyr')
at_12_traffic <- left_join(x = at_12, y = austria_traffic, by = "pageid")

## add revision history data to at_12 (requires package 'dplyr')
at_12_history <- left_join(x = at_12, y = austria_history, by = "pageid")

## retrieve locations from birthplace coordinates (requires package 'ggmap')
birth_lat <- str_split(austria_birthplace$birthplace, pattern = ",") \%>\%
  lapply(., `[`, 1) \%>\%
  unlist \%>\%
  as.numeric
birth_lon <- str_split(austria_birthplace$birthplace, pattern = ",") \%>\%
  lapply(., `[`, 2) \%>\%
  unlist \%>\%
  as.numeric
birth_location <- rep(NA, times = length(birth_lat))
for (i in 1:length(birth_lat)) {
  birth_location[i] <- revgeocode(c(birth_lon[i], birth_lat[i]))
  Sys.sleep(4)
}
}
}
